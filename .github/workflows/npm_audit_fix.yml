name: NPM Audit Fix and PR

on:
  workflow_call:
    inputs:
      base_branch:
        required: false
        type: string
        default: "main"
      pr_title:
        required: false
        type: string
        default: "fix: Apply npm audit fix"
      pr_body:
        required: false
        type: string
        default: "This PR applies security updates via `npm audit fix`."

permissions:
  contents: write
  pull-requests: write

jobs:
  audit-fix:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures full history is available

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Run npm audit fix
        run: npm audit fix || echo "No fixes needed"

      - name: Check for changes
        id: check_changes
        run: |
          git add .
          if git diff --cached --exit-code; then
            echo "No changes to commit."
            echo "changes=false" >> $GITHUB_ENV
          else
            echo "changes=true" >> $GITHUB_ENV
          fi

      - name: Configure Git
        if: env.changes == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create Branch Without Rebase
        if: env.changes == 'true'
        run: |
          BRANCH_NAME="npm-audit-fix-$(date +'%Y-%m-%d-%H-%M-%S')"
          git checkout -b "$BRANCH_NAME"
          git commit -m "fix: apply npm audit fix"
          git push origin "$BRANCH_NAME"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Create Pull Request Without Rebase
        if: env.changes == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pr } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: process.env.BRANCH_NAME,
              base: "${{ inputs.base_branch }}",
              title: "${{ inputs.pr_title }}",
              body: "${{ inputs.pr_body }}",
              draft: false
            });

            console.log(`Pull Request created: ${pr.html_url}`);
