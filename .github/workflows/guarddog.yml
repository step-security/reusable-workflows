name: GuardDog Full Security Scan

on:
  workflow_call:

permissions:
  contents: read

jobs:
  guarddog:
    name: GuardDog - Full Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install GuardDog
        run: pip install guarddog

      - name: 🐶 Local files scan
        id: local_scan
        continue-on-error: true
        run: |
          guarddog npm scan . --output-format json > guarddog_local.json
          cat guarddog_local.json

          count=$(jq '[.results[] | select(length > 0)] | length' guarddog_local.json)
          echo "count=$count" >> $GITHUB_OUTPUT
          echo "local_issue_count=$count" >> $GITHUB_ENV

          if [ "$count" -gt 0 ]; then
            echo ""
            echo "🚨 ======================================"
            echo "❌ GuardDog found $count local issue(s)"
            echo "🚨 ======================================"
            echo ""
          else
            echo ""
            echo "✅ No local issues found"
            echo ""
          fi

      - name: 🔍 Dependency scan (package.json)
        id: dep_scan
        continue-on-error: true
        run: |
          guarddog npm verify ./package.json --output-format json > guarddog_deps.json
          cat guarddog_deps.json

          count=$(jq '[.[] | select(.result.issues > 0)] | length' guarddog_deps.json)
          echo "dep_issue_count=$count" >> $GITHUB_ENV

          if [ "$count" -gt 0 ]; then
            echo ""
            echo "🚨 ======================================"
            echo "❌ GuardDog found $count dependency issue(s)"
            echo "🚨 ======================================"
            echo ""
            echo "📋 Summary of issues:"
            echo "-----------------------------------"
            
            jq -r '
              .[]
              | select(.result.issues > 0)
              | "🔸 \(.dependency)@\(.version)",
                (
                  .result.results
                  | to_entries[]
                  | select(
                      (.value | type == "array" and length > 0)
                      or
                      (.value | type == "string" and length > 0)
                    )
                  | { (.key): .value } | @json
                ), ""
            ' guarddog_deps.json
            
            echo "-----------------------------------"
            echo ""
          else
            echo ""
            echo "✅ No dependency issues found"
            echo ""
          fi

      - name: 🔴 Fail if any issues found
        run: |
          local_count=${local_issue_count:-0}
          dep_count=${dep_issue_count:-0}
          
          if [ "$local_count" -gt 0 ] && [ "$dep_count" -gt 0 ]; then
            echo "🚨 GuardDog found issues in both local files ($local_count) and dependencies ($dep_count)"
            exit 1
          elif [ "$local_count" -gt 0 ]; then
            echo "🚨 GuardDog found $local_count issue(s) in local files scan"
            exit 1
          elif [ "$dep_count" -gt 0 ]; then
            echo "🚨 GuardDog found $dep_count issue(s) in dependency scan"
            exit 1
          else
            echo "✅ All scans passed"
          fi
