name: GuardDog Full Security Scan

on:
  workflow_call:

permissions:
  contents: read

jobs:
  guarddog:
    name: GuardDog - Full Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
        with:
          python-version: "3.10"

      - name: Install GuardDog
        run: pip install guarddog

      - name: 🐶 Local files scan
        id: local_scan
        continue-on-error: true
        run: |
          guarddog npm scan . --output-format json > guarddog_local.json
          cat guarddog_local.json

          count=$(jq '[.results[] | select(length > 0)] | length' guarddog_local.json)
          echo "count=$count" >> $GITHUB_OUTPUT
          echo "local_issue_count=$count" >> $GITHUB_ENV

          if [ "$count" -gt 0 ]; then
            echo "❌ GuardDog found $count local issue(s)"
          else
            echo "✅ No local issues found"
          fi

      - name: 🔍 Dependency scan (package.json)
        id: dep_scan
        continue-on-error: true
        run: |
          guarddog npm verify ./package.json --output-format json > guarddog_deps.json
          cat guarddog_deps.json

          count=$(jq '[.[] | select(.result.issues > 0)] | length' guarddog_deps.json)
          echo "dep_issue_count=$count" >> $GITHUB_ENV

          if [ "$count" -gt 0 ]; then
            echo "❌ GuardDog found $count dependency issue(s)"
            echo ""
            echo "📋 Summary of issues:"
            echo "-----------------------------------"

          jq -r '
            .[]
            | select(.result.issues > 0)
            | "🔸 \(.dependency)@\(.version)",
              (
                .result.results
                | to_entries[]
                | select(
                    (.value | type == "array" and length > 0)
                    or
                    (.value | type == "string" and length > 0)
                  )
                | { (.key): .value } | @json
              ), ""
          ' guarddog_deps.json
          else
            echo "✅ No dependency issues found"
          fi

      - name: 🔴 Fail if any issues found
        run: |
          if [ "${local_issue_count}" -gt 0 ] || [ "${dep_issue_count}" -gt 0 ]; then
            echo "🚨 GuardDog found issues in scan(s)"
            exit 1
          else
            echo "✅ All scans passed"
          fi
