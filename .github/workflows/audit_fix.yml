name: Dependency Audit Fix and PR

on:
  workflow_call:
    inputs:
      package_manager:
        description: "Specify package manager (npm or yarn)"
        required: false
        type: string
        default: "npm"
      force:
        description: "Use --force flag for npm audit fix?"
        required: false
        type: boolean
        default: false
      base_branch:
        description: "Specify a base branch (default: main)"
        required: false
        type: string
        default: "main"
      use_private_packages:
        description: "Use private packages (default: false)"
        required: false
        type: boolean
      script:
        description: "Specify the npm/yarn script to run"
        required: false
        type: string
        default: "npm run build"

permissions:
  contents: write
  pull-requests: write
  packages: read

jobs:
  audit-fix:
    runs-on: ubuntu-latest

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cb605e52c26070c328afc4562f0b4ada7618a84e # v2.10.4
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          node-version: "20"
          cache: ${{ inputs.package_manager }}

      - name: Authenticate npm with GitHub Packages (if using private packages)
        if: inputs.use_private_packages == true
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc
          echo "@${{ github.repository_owner }}:registry=https://npm.pkg.github.com/" >> ~/.npmrc

      - name: Install dependencies
        run: |
          if [ "${{ inputs.package_manager }}" == "npm" ]; then
            npm ci
          else
            yarn install --frozen-lockfile
          fi

      - name: Run Audit Fix
        run: |
          if [ "${{ inputs.package_manager }}" == "npm" ]; then
            if [ "${{ inputs.force }}" == "true" ]; then
              npm audit fix --force || echo "No fixes needed"
            else
              npm audit fix || echo "No fixes needed"
            fi
          else
            npx yarn-audit-fix || echo "No fixes needed"
          fi

      - name: Run Specified Build Script
        run: |
          SCRIPT="${{ inputs.script }}"
          eval "$SCRIPT" || echo "No build script found or failed, skipping."

      - name: Check for Changes
        id: check_changes
        run: |
          git add .

          if git diff --cached --exit-code; then
            echo "No changes detected."
            echo "changes=false" >> $GITHUB_ENV
          else
            echo "changes=true" >> $GITHUB_ENV
          fi

      - name: Determine Branch Name
        if: env.changes == 'true'
        id: set_branch
        run: |
          if [ "${{ inputs.package_manager }}" == "npm" ]; then
            if [ "${{ inputs.force }}" == "true" ]; then
              BRANCH_NAME="npm-audit-fix-force"
            else
              BRANCH_NAME="npm-audit-fix"
            fi
          else
            BRANCH_NAME="yarn-audit-fix"
          fi
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Reset & Force Update PR Branch
        if: env.changes == 'true'
        run: |
          git fetch origin
          if git rev-parse --verify origin/${{ env.BRANCH_NAME }} >/dev/null 2>&1; then
            echo "Branch ${{ env.BRANCH_NAME }} exists. Resetting..."
            git checkout ${{ env.BRANCH_NAME }}
            git reset --hard origin/${{ inputs.base_branch }}
          else
            echo "Branch ${{ env.BRANCH_NAME }} does not exist. Creating..."
            git checkout -b ${{ env.BRANCH_NAME }} origin/${{ inputs.base_branch }}
          fi

      - name: Commit and Force Push Changes
        if: env.changes == 'true'
        run: |
          git add .
          git commit -m "fix: apply audit fixes" || echo "No new changes to commit"
          git push --force origin ${{ env.BRANCH_NAME }}

      - name: Check for Existing Open PR
        if: env.changes == 'true'
        id: check_pr
        run: |
          EXISTING_PR=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls?state=open" \
            | jq -r --arg branch "${{ env.BRANCH_NAME }}" '.[] | select(.head.ref == $branch) | .html_url')

          if [[ -n "$EXISTING_PR" && "$EXISTING_PR" != "null" ]]; then
            echo "Existing PR found: $EXISTING_PR"
            echo "EXISTING_PR_URL=$EXISTING_PR" >> $GITHUB_ENV
          else
            echo "No existing PR found."
            echo "EXISTING_PR_URL=" >> $GITHUB_ENV
          fi

      - name: Create Pull Request (if not existing)
        if: env.changes == 'true' && env.EXISTING_PR_URL == ''
        run: |
          echo "Creating a new pull request..."
          PR_RESPONSE=$(curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d "{
              \"title\": \"fix: Security updates via ${{ env.BRANCH_NAME }}\",
              \"body\": \"This PR applies security updates via audit fix.\",
              \"head\": \"${{ env.BRANCH_NAME }}\",
              \"base\": \"${{ inputs.base_branch }}\",
              \"draft\": false
            }" "https://api.github.com/repos/${{ github.repository }}/pulls")

          PR_URL=$(echo "$PR_RESPONSE" | jq -r '.html_url')

          if [[ "$PR_URL" == "null" || -z "$PR_URL" ]]; then
            echo "❌ Error: PR creation failed. Full API response:"
            echo "$PR_RESPONSE"
            exit 1
          else
            echo "✅ Pull Request created: $PR_URL"
          fi

      - name: Request Review
        if: env.PR_NUMBER != ''
        run: |
          curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{
              "team_reviewers": ["maintained-actions-dev"]
            }' \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ env.PR_NUMBER }}/requested_reviewers"